# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

variables:
  GIT_DEPTH: 1
  GIT_STRATEGY: clone
  VARIABLES_FILE: variables.env
  THREADS: -T10C

stages:
  - test
  - deploy

test:
  stage: test
  tags:
    - build
  script:
    - mvn install ${THREADS}
    - mvn test -Dmaven.test.skip=false ${THREADS} -Ptests
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME !~ /^refactoring\/version-upgrade.*$/'
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - ./**/target/site/
    reports:
      junit:
        - ./**/target/surefire-reports/TEST-*.xml

deploy:
  stage: deploy
  tags:
    - build
  script:
    - mvn install ${THREADS}
    - mvn deploy -P gitlab-repository ${THREADS} -Ptests
  only:
    - dev
    - /^release\/.*$/
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - ./**/target/site/
    reports:
      junit:
        - ./**/target/surefire-reports/TEST-*.xml

# ------------------------------------- TRIGGERS ---------------------------------------------------
test-downstream-build:
  stage: downstream
  tags:
    - build
  script:
    - git fetch
    - git checkout ${CRD_SOURCE_BRANCH} || echo "Using default branch for building..."
    - test -z "$CRD_PARENT_VERSION" || mvn versions:update-parent -DparentVersion=[${CRD_PARENT_VERSION}] -DallowSnapshots=true
    - mvn versions:set -DnewVersion=${CRD_BUILD_VERSION}
    - mvn install ${THREADS}
    - mvn surefire:test -Dmaven.test.skip=false ${THREADS} -Ptests ${CRD_MAVEN_ARGUMENTS}
  artifacts:
    when: always
    reports:
      dotenv: ${VARIABLES_FILE}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline" && $CRD_SOURCE_BRANCH != "dev" && $CRD_SOURCE_BRANCH !~ /^release\/.*$/'